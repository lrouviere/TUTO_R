[
["index.html", "Introduction à R Présentation", " Introduction à R Laurent Rouvière 2020-06-18 Présentation Ce tutoriel présente une introduction au logiciel R. Les thèmes suivants sont abordés : Présentation du logiciel, environnement Rstudio, reporting avec Rmarkdown Objets R Manipulation des données (essentiellement avec dplyr) Visualisation de données (représentations standards et avec ggplot2) Cartes dynamiques avec leaflet Régression : ajustement de modèles, formules, prévisions… On pourra trouver des supports de cours ainsi que les données utilisées à l’adresse suivante https://lrouviere.github.io/intro_R/. "],
["intro.html", "Chapitre 1 Introduction 1.1 R Script 1.2 Packages 1.3 Markdown", " Chapitre 1 Introduction R est un logiciel libre et gratuit principalement dédié aux analyses statistiques et aux représentations graphiques. Il est gratuit et librement distribué par le CRAN (Comprehensive R Archive Network) à l’adresse suivante : https://www.r-project.org. L’installation varie d’un système d’exploitation à l’autre (Windows, Mac OS, Linux) mais elle est relativement simple, il suffit de suivre les instructions. RStudio est une interface facilitant l’utilisation de R. Elle est également gratuite et librement distribuée à l’adresse https://www.rstudio.com. L’interface RStudio est divisée en 4 fenêtres : Console où on peut entrer et exécuter des commandes (taper 1+2) Environnement, History où on peut visualiser les objets construits (taper a &lt;- 1+2 dans la console) Files, Plots… où on peut visualiser les répertoires et fichiers de l’espace de travail, les graphiques, intaller des packages… R script où on conserve les lignes de commandes ainsi que les commentaires sur le travail effectué. Il faut penser à sauvegarder régulièrement ce fichier. 1.1 R Script Il existe différentes façons de travailler sur RStudio. De façon classique, on peut ouvrir un script. entrer les commandes dans le script. regarder les sorties dans la console (en cliquant sur le bouton run). sauver le script. 1.2 Packages Un package est une ensemble de programmes et fonctions R qui complètent les fonctions existantes par défaut dans le logiciel. Un package est généralement dédié à une méthode ou un champ d’application spécifique. Il existe plus de 13 000 packages disponibles sur le CRAN https://cran.r-project.org. On installe un package en utilisant le fonction install.packages dans la console. ou ou cliquant sur le bouton Packages. Une fois le package installé sur la machine, on l’installe avec la fonction library : &gt; install.packages(package.name) &gt; library(packages.name) Exercice 1.1 (Installation et chargement) Exécuter &gt; iris %&gt;% summarize(mean_Petal=mean(Petal.Length)) Que se passe t-il ? Installer et charger le package tidyverse et ré-executer le code précédent. &gt; install.packages(&quot;tidyverse&quot;) &gt; library(tidyverse) &gt; iris %&gt;% summarize(mean_Petal=mean(Petal.Length)) mean_Petal 1 3.758 1.3 Markdown mardown est un package qui permet de créer différents types de documents : rapports au format pdf ou rtf pages web html diaporama pour des présentations (html, beamer, PowerPoint…) applications web interactives … qui comportent du code R. 1.3.1 Syntaxe La syntaxe s’apprend assez facilement (il faut pratiquer), on pourra trouver un descriptif synthétique dans la cheatsheet dédié à Rmarkdown. Par exemple : Caractère en italique ou gras : *italique* et **gras** donne italique et gras Listes non ordonnées - item 1 - item 2 produit item 1 item 2 liste ordonnée : 1. item 1 2. item 2 produit item 1 item 2 tableau : | | Col1 | Col2 | Col3 | |:----:|:----:|:----:|:----:| | Row1 | 1 | 2 | 3 | | Row2 | 1 | 2 | 3 | renvoie Col1 Col2 Col3 Row1 1 2 3 Row2 1 2 3 équation latex : $$\\int_a^b f(x)dx=1$$ renvoie \\[\\int_a^b f(x)dx=1\\] 1.3.2 Les chunks Le code R doit être écrit dans des chunks. On peut insérer des chunks avec : la raccourci clavier Ctrl + Alt + I (OS X: Cmd + Option + I) la bouton Insert -&gt; R en tapant : ```{r} commandes... ``` Plusieurs options peuvent être spécifiés au chunk en fonction de ce que l’on souhaite voir dans le document, par exemple : echo : TRUEor FALSE pour spécifier si on souhaite afficher le code ; eval : TRUEor FALSE pour spécifier si le code doit être évalusé ou non ; results : hide si on ne veut pas voir la sortie du code. On pourra trouver l’ensemble des options disponibles sur cette page : https://yihui.org/knitr/options/ Exercice 1.2 (Premier document) Ouvrir un document mardown (File -&gt; New File -&gt; R Markdown). Cliquer sur le bouton Knit et visualiser la sortie html. Obtenir une sortie pdf. Modifier le document en créant une section Cosinus dans laquelle on tracera la fonction cosinus, on pourra utiliser le code suivant dans un chunk. &gt; x &lt;- seq(-2*pi,2*pi,by=0.01) &gt; y &lt;- cos(x) &gt; plot(x,y,type=&quot;l&quot;) Ajouter une section Sinus dans laquelle on tracera la fonction sinus. 1.3.3 Notebook L’environnement notebook fonctionne exactement comme un document markdown mais permet de visualiser la sortie eu format html sans avoir à recompiler le document en entier. Cet environnement est donc souvent privilégié pendant la réalisation d’un projet en science des données. Pour créer un notebook, on peut passer par RStudio : File -&gt; New File -&gt; R Notebook ou simplement remplacer output: html_document par output: html_notebook dans l’entête d’un document markdown. Exercice 1.3 (Premier document) Transformer le document markdown de l’exercice précédent en notebook. On pourra visualier la sortie en cliquant sur Preview. 1.3.4 Diaporama R Rstudio propose aussi différents environnements pour construire des diaporamas. On pourra utiliser le menu File -&gt; New File -&gt; R Markdown -&gt; Presentation, puis sélectionner le format ioslides ou slidy. On utilisera la même syntaxe que pour les documents markdown. Les slides sont séparés par le symbole ## et les codes R sont toujours insérés dans des chunks. Exercice 1.4 (Premier document) Créer 2 diapositives : Titre: Cosinus où on tracera la fonction cosinus. Titre: Sinus où on tracera la fonction sinus. En modifiant les options des chunks modifier les diapositives de manière à ne pas voir le code R mais voir les graphiques voir uniquement le code R mais pas les graphiques. 1.3.5 Exemples de styles de documents markdown Par défaut l’entête d’un document markdown est de la forme --- title: &quot;Mon document&quot; author: &quot;Laurent Rouviere&quot; date: &quot;6/18/2020&quot; output: html_document --- Il existe tout un tas d’options qui vont permettre d’améliorer le document final. On peut par exemple ajouter une table des matières avec output: html_document: toc: true On peut également utiliser des styles prédéfinis en changeant le thème, voir https://www.datadreaming.org/post/r-markdown-theme-gallery/ output: html_document: theme: cerulean utilisant le package prettydoc (il faut l’installer), voir https://github.com/yixuan/prettydoc output: prettydoc::html_pretty: theme: cayman highlight: github utilisant le package rmdformats (à installer aussi), voir https://github.com/juba/rmdformats output: rmdformats::readthedown: highlight: kate "],
["ggplot.html", "Chapitre 2 Ggplot", " Chapitre 2 Ggplot "],
["references.html", "References", " References "]
]
